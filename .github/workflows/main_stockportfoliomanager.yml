name: Production Deploy

# Controls when the workflow will run
on:
   # Triggers the workflow on push or pull request events but only for the "main" branch
   push:
      branches: ["main"]
   pull_request:
      branches: ["main"]

   # Allows you to run this workflow manually from the Actions tab
   workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
   test_build_push:
      runs-on: ubuntu-latest

      defaults:
         run:
            shell: bash

      steps:
         # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
         - uses: actions/checkout@v3

         - uses: actions/setup-node@v3
           with:
              node-version: 18

         - name: ðŸ”¨ Test project
           working-directory: ./backend
           run: |
              npm install
              npm test

         - name: Npm install frontend
           working-directory: ./frontend
           run: |
              npm install

         - name: build frontend and backend
           working-directory: ./
           run: |
              npm run build

         - name: Configure AWS credentials
           uses: aws-actions/configure-aws-credentials@v1
           with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET }}
              aws-region: us-east-1

         - name: Login to Amazon ECR
           id: login-ecr
           uses: aws-actions/amazon-ecr-login@v1

         - name: Build, tag, and push image to Amazon ECR
           run: |
              docker build -t ${{ secrets.AWS_ECR_URL}}/stockportfolio:latest .
              docker push ${{ secrets.AWS_ECR_URL}}/stockportfolio:latest

   deploy_to_ec2:
      needs: test_build_push
      runs-on: ubuntu-latest
      env:
         SSH_HOST: ${{ secrets.AWS_EC2_HOST }}
         SSH_USER: ${{ secrets.AWS_EC2_USER }}
         SSH_KEY: ${{ secrets.AWS_EC2_KEY }}
      steps:
         - name: Configure SSH
           run: |
              mkdir -p ~/.ssh/
              echo "$SSH_KEY" > ~/.ssh/github-actions-key
              chmod 400 ~/.ssh/github-actions-key
              cat >>~/.ssh/config <<END
              Host ec2
                 HostName $SSH_HOST
                 User $SSH_USER
                 IdentityFile ~/.ssh/github-actions-key
                 StrictHostKeyChecking no
              END

         - name: List home directory
           run: ssh ec2 'docker-compose pull && docker-compose up -d'
